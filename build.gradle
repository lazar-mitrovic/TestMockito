plugins {
    id 'java'
    id 'org.graalvm.buildtools.native' version "0.9.12"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    testImplementation(group: 'org.mockito', name: 'mockito-core', version: '4.6.1')

    def junitVersion = providers.gradleProperty('junit.jupiter.version')
            .forUseAtConfigurationTime()
            .get()
    testImplementation(platform("org.junit:junit-bom:${junitVersion}"))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testCompileOnly(group: 'org.junit.jupiter', name: 'junit-jupiter-params', version:"${junitVersion}")
}

test {
    useJUnitPlatform()
}

graalvmNative {
    agent {
        enableExperimentalPredefinedClasses = true
    }
    binaries {
        main {
            imageName = 'TestMockito'
            mainClass = 'org.example.Main'
            verbose = true
        }
        test {
            verbose = true
            // Enable Mockito
            buildArgs.add('--rerun-class-initialization-at-runtime=net.bytebuddy.ClassFileVersion,net.bytebuddy.utility.dispatcher.JavaDispatcher,net.bytebuddy.utility.Invoker$Dispatcher')
            buildArgs.add('--initialize-at-build-time=net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$ForLoadedExecutable,net.bytebuddy.description.type.TypeDescription$AbstractBase,net.bytebuddy.description.type.TypeDescription$ForLoadedType,net.bytebuddy.description.method.MethodDescription$ForLoadedMethod,net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic,net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic$1,net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic$2,net.bytebuddy.implementation.bind.annotation.Super$Instantiation$2')
        }
    }
}
